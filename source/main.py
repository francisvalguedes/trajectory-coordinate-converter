"""
Creator: Francisval Guedes Soares
Date: 2021
"""

import streamlit as st
from datetime import datetime
from lib.pgFunctions import*

def main():
    """main function that provides the simplified interface for configuration,
         visualization and data download. """  

    st.set_page_config(
    page_title="Convers√£o de Coordenadas",
    page_icon="üåè", # "ü§ñ",  # "üßä",
    # https://raw.githubusercontent.com/omnidan/node-emoji/master/lib/emoji.json
    layout="wide",
    initial_sidebar_state="expanded",
    # menu_items={
    #     'Get Help': 'https://www.sitelink.com',
    #     'Report a bug': "https://www.sitelink.com",
    #     'About': "# A cool app"
    # }
    )     

    st.title("Convers√£o de Coordenadas")
    st.subheader('**Convers√£o de coordenadas de trajet√≥rias espaciais entre sistemas de refer√™ncia terestres**')

    st.markdown('Iniciado por: Francisval Guedes Soares, Email: francisvalg@gmail.com')
    
    url = "https://github.com/francisvalguedes/trajectory-coordinate-converter.git"
    st.markdown("Reposit√≥rio: [github.com/francisvalguedes/trajectory-coordinate-converter](%s)" % url)

    ## Descri√ß√£o                
    st.markdown("""
    Aplica√ß√£o web desenvolvida com Streamlit que permite a convers√£o de coordenadas entre alguns sistemas de refer√™ncia, considera o elipsoide WGS84. Admite entrada manual de um ponto ou a partir de arquivo CSV contendo, por exemplo, uma trajet√≥ria com milhares de pontos. A aplica√ß√£o utiliza as bibliotecas `pandas`, `numpy` e `pymap3d` para realizar as convers√µes necess√°rias e a biblioteca `Folium` e  `plotly` para mostrar os dados no mapa e em gr√°ficos.

    Escolha a p√°gina desejada na barra lateral:
                
    ### Funcionalidades
    A aplica√ß√£o possui quatro p√°ginas principais:
                
    0. **Main**: P√°gina de apresenta√ß√£o e cadastro de ponto de refer√™ncia sensor, o cadastro pode ser somente para a sess√£o atual ou definitivo a escolha do usu√°rio.
    1. **Convers√£o entre Grau DMS e Decimal**: Converte coordenadas de graus(degree), minutos e segundos (DMS) para graus decimais ou o contr√°rio.
    2. **Convers√£o de Coordenadas Geod√©sicas para ECEF e ENU Plano Local**: Converte coordenadas geod√©sicas para ECEF (Earth-Centered, Earth-Fixed), para ENU (East-North-Up) plano local e azimute, eleva√ß√£o e dist√¢ncia.
    3. **Convers√£o de Coordenadas Plano Local ENU (XYZ) ou Azimute, Eleva√ß√£o e Dist√¢ncia em ECEF e Geod√©sicas**: Converte coordenadas de plano local ENU (XYZ) ou azimute, eleva√ß√£o e dist√¢ncia para ECEF e coordenadas geod√©sicas (latitude, longitude e altitude).
    4. **Convers√£o de Coordenadas Plano Local de refer√™ncia ENU para outro plano local ENU**: Converte coordenadas de plano local ENU (XYZ) ou azimute, eleva√ß√£o e dist√¢ncia para outro plano local ENU (XYZ) e azimute, eleva√ß√£o e dist√¢ncia, e tamb√©m para ECEF e coordenadas geod√©sicas .
    5. **Convers√£o de Coordenadas Geocentricas X,Y,Z para plano local ENU**: Converte coordenadas geoc√™ntricas cartesianas (XYZ) para plano local ENU (XYZ) e azimute, eleva√ß√£o e dist√¢ncia, e tamb√©m para geod√©sicas .
    6. **Velocidade e Acelera√ß√£o de Trajet√≥ria ENU**:  Realiza c√°lculos de velocidade, acelera√ß√£o e bandas passantes (para azimute eleva√ß√£o e dist√¢ncia) a partir de trajet√≥rias nominais cartesianas sem ru√≠do em referenciais locais ENU (East-North-Up). Ao carregar o arquivo CSV com a trajet√≥ria e configurar par√¢metros do usu√°rio obt√™m-se os resultados de forma interativa com gr√°ficos e tabelas .
    
    Abaixo a figura representa os sistemas de refer√™ncia envolvidos no elipsoide WGS84.       
    """)

    st.image("figure/fig_ecef.png", caption="Sistemas de refer√™ncia envolvidos")

    st.markdown('Novos pontos de refer√™ncias podem ser cadastrados na barra lateral')
    st.markdown('Pontos de refer√™ncia j√° cadastrados:')
    st.session_state.lc_df = pd.read_csv('data/confLocalWGS84.csv').dropna(how='all')
    st.dataframe(st.session_state.lc_df.style.format({'lat': '{:.6f}', 'lon': '{:.6f}', 'height': '{:.2f}'}))

    #Cadastra sensor sidebar
    sensor_registration()



        
if __name__== '__main__':
    main()